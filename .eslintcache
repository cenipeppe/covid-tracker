[{"C:\\Users\\Utente\\Desktop\\Tree School\\Esercitazioni\\covid-tracker\\src\\index.js":"1","C:\\Users\\Utente\\Desktop\\Tree School\\Esercitazioni\\covid-tracker\\src\\App.js":"2","C:\\Users\\Utente\\Desktop\\Tree School\\Esercitazioni\\covid-tracker\\src\\components\\Cards.jsx":"3","C:\\Users\\Utente\\Desktop\\Tree School\\Esercitazioni\\covid-tracker\\src\\components\\Chart.jsx":"4","C:\\Users\\Utente\\Desktop\\Tree School\\Esercitazioni\\covid-tracker\\src\\components\\Header.jsx":"5","C:\\Users\\Utente\\Desktop\\Tree School\\Esercitazioni\\covid-tracker\\src\\api\\index.js":"6","C:\\Users\\Utente\\Desktop\\Tree School\\Esercitazioni\\covid-tracker\\src\\components\\SingleCard.jsx":"7","C:\\Users\\Utente\\Desktop\\Tree School\\Esercitazioni\\covid-tracker\\src\\components\\CountryPicker.jsx":"8"},{"size":158,"mtime":1606249438139,"results":"9","hashOfConfig":"10"},{"size":826,"mtime":1607790791667,"results":"11","hashOfConfig":"10"},{"size":885,"mtime":1606829676508,"results":"12","hashOfConfig":"10"},{"size":1602,"mtime":1607784684253,"results":"13","hashOfConfig":"10"},{"size":447,"mtime":1606251895051,"results":"14","hashOfConfig":"10"},{"size":975,"mtime":1607790756238,"results":"15","hashOfConfig":"10"},{"size":853,"mtime":1606416812112,"results":"16","hashOfConfig":"10"},{"size":837,"mtime":1607790906946,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"wv4hfd",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Utente\\Desktop\\Tree School\\Esercitazioni\\covid-tracker\\src\\index.js",[],["36","37"],"C:\\Users\\Utente\\Desktop\\Tree School\\Esercitazioni\\covid-tracker\\src\\App.js",[],"C:\\Users\\Utente\\Desktop\\Tree School\\Esercitazioni\\covid-tracker\\src\\components\\Cards.jsx",[],"C:\\Users\\Utente\\Desktop\\Tree School\\Esercitazioni\\covid-tracker\\src\\components\\Chart.jsx",["38"],"import { CircularProgress } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Line, Bar } from 'react-chartjs-2'\r\nimport { fetchDailyData } from '../api';\r\n\r\nconst Chart = () => {\r\n    const [dailyData,setDailyData]= useState([]);\r\n\r\n    useEffect(() => {\r\n        void (async () => {\r\n            setDailyData(await fetchDailyData());\r\n        })()\r\n    }, []\r\n    )\r\n\r\n    const lineChart = (\r\n        (dailyData.length)\r\n        ?\r\n        <Line\r\n            data={{\r\n                labels: dailyData.map(({date})=>date),\r\n                datasets: [{\r\n                        data: dailyData.map(({ confirmed })=> confirmed),\r\n                        label: 'Confermati',\r\n                        borderColor: '#ffffff',\r\n                        fill: true\r\n                }, {\r\n                        data: dailyData.map(({ deaths }) => deaths),\r\n                        label: 'Decessi',\r\n                        borderColor: 'red',\r\n                        backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                        fill: true\r\n                    }, {\r\n                        data: dailyData.map(({ recovered }) => recovered),\r\n                        label: 'Ricoveri',\r\n                        borderColor: 'green',\r\n                        backgroundColor: 'rgba(0, 255, 0, 0.5)',\r\n                        fill: true\r\n                    }]\r\n            }}\r\n        />\r\n        :\r\n        <CircularProgress />\r\n    )\r\n\r\n    return (\r\n        <div className='Chart'>\r\n            {lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart\r\n","C:\\Users\\Utente\\Desktop\\Tree School\\Esercitazioni\\covid-tracker\\src\\components\\Header.jsx",[],"C:\\Users\\Utente\\Desktop\\Tree School\\Esercitazioni\\covid-tracker\\src\\api\\index.js",[],"C:\\Users\\Utente\\Desktop\\Tree School\\Esercitazioni\\covid-tracker\\src\\components\\SingleCard.jsx",[],"C:\\Users\\Utente\\Desktop\\Tree School\\Esercitazioni\\covid-tracker\\src\\components\\CountryPicker.jsx",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":3,"column":16,"nodeType":"45","messageId":"46","endLine":3,"endColumn":19},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'Bar' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]